name: Deploy Wisecow to Minikube

on:
  push:
    branches: [main]

jobs:
  test-on-minikube:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Start Minikube
      uses: medyagh/setup-minikube@latest

    - name: Verify cluster
      run: kubectl get pods -A

    - name: Build image inside Minikube
      run: minikube image build -t wisecow:local .

    - name: Deploy Wisecow to Minikube
      run: |
        kubectl apply -f k8s/deployment.yml
        kubectl apply -f k8s/service.yml
        kubectl wait --for=condition=Ready pod -l app=wisecow --timeout=120s

    - name: Wait for external IP assignment
      run: |
        echo "Waiting for LoadBalancer IP..."
        for i in {1..30}; do
          EXTERNAL_IP=$(kubectl get svc wisecow-service -o jsonpath="{.status.loadBalancer.ingress[0].ip}")
          if [ -n "$EXTERNAL_IP" ]; then echo "‚úÖ IP assigned: $EXTERNAL_IP"; break; fi
          echo "‚è≥ Still waiting..."; sleep 5
        done

    - name: Show external access URL
      run: |
        EXTERNAL_IP=$(kubectl get svc wisecow-service -o jsonpath="{.status.loadBalancer.ingress[0].ip}")
        echo "üåê Wisecow is externally accessible at: http://$EXTERNAL_IP:4499"
        echo "‚úÖ Share this URL with your interviewer to demonstrate public access"

    - name: Test Wisecow app via external IP
      run: |
        EXTERNAL_IP=$(kubectl get svc wisecow-service -o jsonpath="{.status.loadBalancer.ingress[0].ip}")
        echo "Testing Wisecow app at http://$EXTERNAL_IP:4499"
        RESPONSE=$(curl --max-time 10 --connect-timeout 5 http://$EXTERNAL_IP:4499 || echo "Connection failed")
        echo "$RESPONSE"
        if echo "$RESPONSE" | grep "<pre>"; then
          echo "‚úÖ Wisecow app responded correctly"
        else
          echo "‚ùå Unexpected response from Wisecow app"
          exit 1
        fi
